@inherits CalendarMenuBase
@using UIComponents.Custom.SheetComponent
@using PlannerApp.Client.Models

<SheetLabel>Display Mode</SheetLabel>
<SheetItem>
    @* Hack: Fields require edit context, using this to support interactions without making a completely separate component (for now) *@
    <EditForm Model="CalendarService.State">
        <Field>
            <SelectField StringParser="Enum.Parse<CalendarMode>" @ref="ModeInput" @bind-Value="CalendarService.State.Mode" ControlClass="is-expanded" class="is-fullwidth">
                <SelectItem Value="CalendarMode.Day">Day</SelectItem>
                <SelectItem Value="CalendarMode.Week">Week</SelectItem>
                <SelectItem Value="CalendarMode.Month">Month</SelectItem>
            </SelectField>
        </Field>
        <Field>
            <DateField @ref="DateInput" @bind-Value="CalendarService.State.Date"></DateField>
        </Field>
    </EditForm>
</SheetItem>
<SheetLabel>Categories</SheetLabel>
<SheetItem>
    @if (CategoryFilters != null)
    {
        @foreach (var filter in CategoryFilters)
        {
            var categoryID = filter.Model.ID;
            <Field>
                <div class="control">
                    <CheckBox Checked="filter.IsVisible" OnChange="() => UpdateCategoryFilters(categoryID)" @key="filter">@filter.Model.Description</CheckBox>
                </div>
            </Field>
        }
        <Field>
            <div class="control">
                <CheckBox OnChange="() => UpdateCategoryFilters(null)" Checked="NoCategoryFilter.IsVisible">No Category</CheckBox>
            </div>
        </Field>
    }
</SheetItem>